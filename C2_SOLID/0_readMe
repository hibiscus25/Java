
------------------------------------------- Для чего нужны принципы ----------------------------------------------------
        При создании программных систем использование принципов SOLID способствует созданию такой системы,
     которую будет легко поддерживать и расширять в течение долгого времени
        Принципы SOLID — это руководства, которые также могут применяться во время работы над существующим программным обеспечением
     для его улучшения


-------------------------------------------------- Принципы ------------------------------------------------------------

    S (single responsibility principle)             -   Для каждого класса должно быть определено единственное назначение
       принцип единственной ответственности                 Все ресурсы, необходимые для его осуществления, должны быть инкапсулированы
                                                        в этот класс и подчинены только этой задаче

    O (open-closed principle)                       -   «программные сущности … должны быть открыты для расширения,
       принцип открытости/закрытости                    но закрыты для модификации»

    L (Liskov substitution principle)               -   «объекты в программе должны быть заменяемыми на экземпляры
       принцип подстановки Лисков                       их подтипов без изменения правильности выполнения программы»

    I (interface segregation principle)             -   «много интерфейсов, специально предназначенных для клиентов,
       принцип разделения интерфейса                    лучше, чем один интерфейс общего назначения»

    D (dependency inversion principle)              -   «зависимость на Абстракциях. Нет зависимости на что-то конкретное»
       принцип инверсии зависимостей