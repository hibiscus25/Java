 - java.lang.Comparable
 - java.util.Comparator

--------------------------------------------------- общее --------------------------------------------------------------
        1. Использование интерфейcов в своих приложениях позволяет упорядочивать (сортировать) данные.

        2. Отличие интерфейсов:
             - Comparable используется только для сравнения объектов класса, в котором данный интерфейс реализован.
               т.е. Comparable определяет логику сравнения объекта определенного ссылочного типа внутри своей реализации
               (по правилам разработчика).
               (используют, когда нужна сортировка по натуральному порядку)

             - Comparator представляет отдельную реализацию и ее можно использовать многократно и с различными классами.
               т.е. interface Comparator позволяет создавать объекты, которые будут управлять процессом сравнения (при сортировках)

             - Comparable использует метод внутреннего сравнения (он имеет правила сравнения по умолчанию),
               а Comparator относится к внешнему методу сравнения (внешний компаратор, можно реализовать определенные правила сравнения)


-------------------------------------------------- СOMPARABLE ----------------------------------------------------------
    1. В интерфейсе Comparable объявлен только один метод:
            -   compareTo (Object obj)      -       предназначенный для упорядочивания объектов класса
                                                    Данный метод удобно использовать для сортировки списков или массивов объектов.

    2. Метод compareTo (Object obj) сравнивает вызываемый объект с obj.
            - в отличие от метода equals, который возвращает true или false, compareTo возвращает:
                    -   0, если значения равны;
                    -   отрицательное значение (обычно -1), если вызываемый объект меньше obj;
                    -   положительное значение (обычно +1), если вызываемый объект больше obj.
            Если типы объектов не совместимы при сравнении, то compareTo (Object obj) может вызвать исключение ClassCastException.
            Необходимо помнить, что аргумент метода compareTo имеет тип сравниваемого объекта класса.

    3. Обычные классы Byte, Short, Integer, Long, Double, Float, Character, String уже реализуют интерфейс Comparable.


-------------------------------------------------- COMPARATOR ----------------------------------------------------------
    1.  В интерфейсе Comparator объявлен метод:
         - compare (Object obj1, Object obj2)    -   позволяет сравнивать между собой два объекта
                                                     На выходе метод возвращает:
                                                        - значение 0, если объекты равны
                                                        - положительное значение или отрицательное значение, если объекты не тождественны

    2. метод может вызвать исключение ClassCastException, если типы объектов не совместимы при сравнении.
