
     Рефлексия (от reflexio - обращение назад) - это механизм исследования данных о программе во время её выполнения.
Рефлексия в Java осуществляется с помощью Java Reflection API, состоящий из классов пакетов:
            -   java.lang
            -   java.lang.reflect.

    Java Reflection API позволяет получать информацию о конструкторах, методах и полях классов и выполнять следующие операции
над полями и методами объекта/класса**:
            -   определение класса объекта;
            -   получение информации о полях, методах, конструкторах и суперклассах;
            -   получение информации о модификаторах полей и методов;
            -   создание экземпляра класса, имя которого неизвестно до момента выполнения программы;
            -   определение и изменение значений свойств объекта/класса;
            -   вызов методов объекта/класса.
    ** -  в тексте используется объект/класс.
               при работе с объектом (реализацией класса) можно обращаться к полям и методам класса напрямую,
          если они доступны (не private).
               при работе с классом можно обращаться к методам класса с использованием Java Reflection API,
          но класс необходимо получить из объекта.


------------------------------------------------------------------------------------------------------------------------
    Для получения класса можно использовать 3 варианта:
                                    Class fool  = Class.forName("B_ReadMe.B7_Reflection.Foo");
                                    Class fool2 = foo.getClass();
                                    Class fool3 = Foo.class;

        - getName()         -   возвращает наименование класса, включающего пакет (package) :
                                        System.out.println (fool.getName());                            // java.lang.Foo

        - getModifiers()    -   возвращает значение модификатора класса
                                        а) Класс java.lang.reflect.Modifier содержит статические методы, возвращающие логическое значения
                                    проверки модификатора класса :
                                                Class cls = foo.getClass();
                                                int mods = cls.getModifiers();
                                                if (Modifier.isPublic  (mods))	{
                                                    System.out.println("public");                              // public
                                                }
                                                if (Modifier.isAbstract(mods))	{
                                                    System.out.println("abstract");
                                                }
                                                if (Modifier.isFinal (mods)) {
                                                    System.out.println("final");
                                                }

                                                или можно
                                        б) System.out.println(Modifier.toString(mods));;

        - getSuperclass()       -   возвращает рефлексированный суперкласс рефлексированного объекта (класса)
                    Поскольку в Java отсутствует множественное наследование, то для получения всех предков следует рекурсивно вызвать
                метод getSuperclass() в цикле, пока не будет достигнут Object, являющийся родителем всех классов.
                    Object не имеет родителей, поэтому вызов его метода getSuperclass() вернет null.

        - getInterfaces()         -   возвращает список реализующих классом интерфейсов

        - getConstructors()       -   возвращает всех конструкторов, которые есть у текущего класса
        - getDeclaredConstructors -   возвращает все объявленные конструкторы в  текущем классе

        - getMethods()      -  возвращает массив открытых методов типа java.lang.reflect.Method.
                Эти методы могут быть определены не только в классе, но также и в его родителях (суперклассе),
            либо интерфейсах, реализованных классом или его родителями.
                Kласс Method позволяет получить:
                    -   имя метода,
                    -   тип возвращаемого им значения,
                    -   типы параметров метода,
                    -   модификаторы и
                    -   генерируемые исключения.

        - getFields()       - возвращает массив открытых полей типа java.lang.reflect.Field, которые могут быть определены
                              не только в данном классе, но также и в его родителях (суперклассе),
                              либо интерфейсах, реализованных классом или его родителями.
                Kласс Field позволяет получить:
                    -   имя поля
                    -   тип поля
                    -   модификаторы

                - getField() и getFields()                      -   возвращают только открытые члены данных класса
                - getDeclaredField() и getDeclaredFields()      -   возвращают все поля класса, включая закрытые и защищенные

                - getInt(), getFloat(), getByte() и др.         -   возвращают значение примитивных типов
                - setInt(), setFloat(), setByte() и др.         -   устанавливает значения примитивным полям

                - setAccessible(true)                           -   открывает доступ к закрытому полю
                                                                    при этом final поля не меняются