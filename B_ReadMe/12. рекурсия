
--------------------------------------------- Java рекурсия -----------------------------------------------------------
        1. Рекурсией называется метод (функция), которая внутри своего тела вызывает сама себя

        2. Рекурсивные вызовы образуют бесконечный цикл, поэтому в коде рекурсивного метода должно быть предусмотрено
    условие завершения цикла. то есть прекращения самовызовов и возврата управления в вызвавший экземпляр метода.
           - Понятно, что вызывать новый экземпляр метода нужно не с теми параметрами, которые переданы текущему экземпляру,
        иначе цикл никогда не завершиться;
           - Когда рекурсивный метод вызывает новый экземпляр себя, параметры и локальные перменные текущего экземляра
        сохраняются на стеке
           - когда вызванный экземпляр возвращает управление, они извлекаются из стека
           - Таким образом, чем больше шагов самовызова делает метод, тем больше растет стек

        3. Рекурсия используется например для:
                - просмотра папок на диске,
                - также классическим примером является вычисление факториала

        4. Итого:
                - в рекурсивном методе должны быть:
                        - команда самовызова
                        - счетчик повторов
                        - граничное условие, при выполнении которого повторные вызовы метода прекращаются

        5. Пример1:
               - для того чтобы вычислить n!, достаточно знать и перемножить между собой (n-1)! и n
                        static int fact (int n){
                            if (n == 1) {
                                return 1;
                            } else if (n == 2) {
                                return 2;
                            } else {
                                return fact(n-1) * n;
                            }
                        }
                            - указанный рекурсивный метод вычисляет факториал натурального числа

        6. Пример2 (вычисляем через рекурсию n-ое число Фибоначчи):
               - напомним, как выглядят первые элементы этого ряда: 1 1 2 3 5 8 13 …
                        static int fib (int n){
                            if (index <= 0) {
                                return 0;
                            } else if (n == 1)
                                return 1;
                            else if (n == 2))
                                return 1;
                        return fib (n-2) + fib (n-1);
                        }

        7. Пример3 (замена времени папки):
                        public static void sameDateToDirFiles(String dir){
                            long modified = System.currentTimeMillis();
                            File walkDir = new File(dir);
                            String [] dirList = walkDir.list();

                            for (int i = 0; i < dirList.length; i++){
                                File f = new File( dir + File.separator + dirList[i]);

                                if(f.isDirectory()){
                                    f.setLastModified(modified);
                                    sameDateToDirFiles(f.getPath());
                                    continue;
                                }
                                f.setLastModified(modified);
                            }
                        }

                        public static void main(String[] args) {
                            sameDateToDirFiles("C:\\Users\\Администратор\\Desktop\\tests");
                        }